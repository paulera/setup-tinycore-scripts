###############################################################################
#
# This script download all other scripts so it should be used as second step,
# after using 'tinycore-install'. Then you should be good to easily tune
# the server.
#
# It can also be used to update the scripts to the latest version.
#
# Download and run this script:
#
#         mkdir /opt/tinycore-scripts                 <- place to store files
#         cd /opt/tinycore-scripts
#         tce-load -w -i openssl.tcz                  <- enable ssl (for https)
#         wget git.io/tinycore-scripts-download       <- download this script
#         sh tinycore-scripts-download                <- run
#
# What tinycore-scripts-download does:
#    - Download all other scripts to the working directory
# 
# Credits:
# By paulo.amaral(a)gmail(dot)com - https://github.com/paulera
#
###############################################################################

#!/bin/sh

BASE_URL=https://raw.githubusercontent.com/paulera/setup-tinycore-scripts/master
USER=paulera
REPO=setup-tinycore-scripts

TIMESTAMP=`date +%s`
TMP=tmp_download_$TIMESTAMP

echo
echo "This script does NOT download tinycore-install."
echo

if [ ! -z $(command -v tce-load) ]; then
	tce-load -w -i openssl.tcz;
fi

mkdir $TMP
cd $TMP
for i in `wget -qO- https://api.github.com/repos/$USER/$REPO/contents/ | cat | \
	grep \"download_url\" | \
	grep -i -v "/readme.md\"" | \
	grep -i -v "/tinycore-install\"", | \
	sed 's/[ ]\+"download_url": "\(.*\)"[,]*/\1/g' \
	`; do
	echo "Downloading $i ..."
	wget --no-cache -q $i
done
cd ..
cp $TMP/* . && rm -r $TMP
