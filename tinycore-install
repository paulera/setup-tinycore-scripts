#
# This script installs the tinycore linux from a bootable ISO.
#
# 1) Download the Core ISO from http://tinycorelinux.net/downloads.html (11 MB)
#
# 2) Create a virtual machine and boot the ISO. (press [Return] when asked)
#
# 3) Download this script:
#
#         tce-load -w -i openssl.tcz                  <- enable ssl (for https)
#         wget http://bit.ly/tinycore-install         <- download script*
#         sh tinycore-install                         <- run
#
# 3) What tinycore-install does:
#    - Create and format a single partition using whole disk space
#    - Install Kernel
#    - Install GRUB
#    - Setup GRUB to boot from disk
# 
# Credits:
# By paulo.amaral(a)gmail(dot)com - https://github.com/paulera
# Based on @smileymattj video: http://www.youtube.com/watch?v=0QMY3V5XLj8
#
# Download: wget http://bit.ly/tinycore-install
#           (requires openssl for https)
#

#!/bin/sh

step() {
	echo -e "\e[1;36m+++ $1\e[0m";
}

ok() {
	echo -e "\e[32m[success] \e[0m";
}

err() {
	{ set +x; } 2>/dev/null
	echo -e "\n\e[1;31mERROR! Check last command output for details.\e[0m";
	echo -e "\nInstallation aborted.\n";
	exit 1
}

pause() {
	echo -e "\n\e[1;30mPress [return] for next step...\e[0m"
	read
}

echo
echo "This will setup your partitions, install kernel and grub, and any"
echo "existing data will be lost. Just make sure you run this in a clean"
echo "environment, from the bootable ISO, and you should be fine."
echo
read -p "Continue (y/n)? " -n 1 -r
echo
echo

if [[ "$REPLY" = "Y" ]] || [[ "$REPLY" = "y" ]]; then

	# ------------------------------------
	step "1 of 9. Create partition\n"

	set -x
	sudo sh -c "echo -e \"n\\np\\n1\\n\\n\\n\\n\\na\\n1\\nw\" | fdisk /dev/sda" || err
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "2 of 9. Format partition\n"
	
	set -x
	sudo mkfs.ext4 /dev/sda1
	{ set +x; } 2>/dev/null
	ok

	set -x
	sudo rebuildfstab
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "3 of 9. Mount Disk and CD\n"
	
	set -x
	sudo mount /mnt/sda1
	{ set +x; } 2>/dev/null
	ok

	set -x
	sudo mount /mnt/sr0
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "4 of 9. Create directories\n"

	set -x
	sudo mkdir -p /mnt/sda1/boot/grub
	{ set +x; } 2>/dev/null
	ok

	set -x
	sudo mkdir -p /mnt/sda1/tce/optional
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "5 of 9. Copy kernel\n"

	set -x
	sudo cp -p /mnt/sr0/boot/core.gz /mnt/sda1/boot/
	{ set +x; } 2>/dev/null
	ok

	set -x
	sudo cp -p /mnt/sr0/boot/vmlinuz /mnt/sda1/boot/
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "7 of 9. Install grub\n"
	
	set -x
	tce-load -w -i grub-0.97-splash.tcz
	{ set +x; } 2>/dev/null
	ok

	set -x
	sudo cp -p /usr/lib/grub/i386-pc/* /mnt/sda1/boot/grub/
	{ set +x; } 2>/dev/null
	ok

	set -x
	sudo touch /mnt/sda1/tce/mydata.tgz
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "8 of 9. Create menu for GRUB\n"

	set -x
	sudo sh -c "echo -e \"default 0\\ntimeout 0\\ntitle MicroCore\\nkernel /boot/vmlinuz quiet\\ninitrd /boot/core.gz\" > /mnt/sda1/boot/grub/menu.lst"
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "9 of 9. Create master boot record\n"

	set -x
	sudo sh -c "echo -e \"root (hd0,0)\\nsetup (hd0)\\nquit\" | grub --batch"
	{ set +x; } 2>/dev/null
	ok

	pause

	# ------------------------------------
	step "Done!\n"
	echo -e "Script finished. Remove ISO from drive and reboot.\n"

fi
