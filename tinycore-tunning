###############################################################################
#
# This script does some tunning in a Tiny Core Linux installation:
#
# To download this script, use tinycore-scripts-download:
#
#         tce-load -w -i openssl.tcz                  <- enable ssl (for https)
#         mkdir /opt/tinycore-scripts
#         cd /opt/tinycore-scripts
#         wget git.io/tinycore-scripts-download       <- download script
#         sh tinycore-scripts-download                <- run
#
# To run, after downloading it do
#         sh tinycore-tunning
#
# What tinycore-tunning does:
#    - Setup persistence, including user accounts
#    - Create /opt/bin and /opt/sbin to store custom scripts
#    - Create the scripts 'shutdown' and 'reboot' (they backup before turn off)
# 
# Credits:
# By paulo.amaral(a)gmail(dot)com - https://github.com/paulera
#
###############################################################################

#!/bin/sh

step() {
	echo -e "\e[1;36m+++ $1\e[0m";
}

ok() {
	echo -e "\e[32m[success] \e[0m\n";
}

err() {
	{ set +x; } 2>/dev/null
	echo -e "\n\e[1;31mERROR! Check last command output for details.\e[0m";
	echo -e "\nInstallation aborted.\n";
	exit 1
}

pause() {
	echo -e "\e[1;30mPress [return] for next step...\e[0m"
	read
}

echo

#------------------------------------------------------------------------------
step "Creating /mnt/sda1/tce/mydata.tgz for persistence\\n"
if [ -f /mnt/sda1/tce/mydata.tgz ]
then
	echo -e "/mnt/sda1/tce/mydata.tgz already exists.\n";
else
	set -x
	sudo touch /mnt/sda1/tce/mydata.tgz || err
	{ set +x; } 2>/dev/null
	ok
fi

#------------------------------------------------------------------------------
step "Update persistence list including passwd and shadow files\\n"

if [ ! -z "$(cat /opt/.filetool.lst | grep etc/passwd)" ]
then
	echo "etc/passwd already in /opt/.filetool.lst\\n"
else
  set -x
  sudo sh -c 'echo "etc/passwd" >> /opt/.filetool.lst' || err
  { set +x; } 2>/dev/null
  ok
fi

if [ ! -z "$(cat /opt/.filetool.lst | grep etc/shadow)" ]
then
	echo "etc/shadow already in /opt/.filetool.lst\\n"
else
  set -x
  sudo sh -c 'echo "etc/shadow" >> /opt/.filetool.lst' || err
  { set +x; } 2>/dev/null
  ok	
fi

#------------------------------------------------------------------------------
step "Creating /opt/bin and /opt/sbin for custom global scripts (persisted)\\n"

if [ -d /opt/sbin ]
then
	echo "/opt/sbin already exists.";
else
  set -x
  sudo mkdir /opt/sbin || err
  sudo chown root:staff /opt/sbin || err
  sudo chmod -R 740 /opt/sbin || err
  { set +x; } 2>/dev/null
  ok
fi

if [ -d /opt/bin ]
then
	echo -e "/opt/bin already exists.\n";
else
  set -x
  sudo mkdir /opt/bin || err
  sudo chown root:staff /opt/bin || err
  sudo chmod -R 770 /opt/bin || err
  { set +x; } 2>/dev/null
  ok
fi

#------------------------------------------------------------------------------
step "Add entries to \$PATH: ~/bin;/opt/sbin;/opt/bin\\n"
set -x
for i in /home; do
	echo Updating .ashrc in /home/$i
	echo -e "\n#Added by tinycore-scripts\nexport PATH=~/bin;/opt/sbin;/opt/bin;\$PATH" >> /home/$i/.ashrc || err
loop

{ set +x; } 2>/dev/null
ok

#------------------------------------------------------------------------------
step "Create script: /opt/bin/shutdown (with persistence support)\\n"
if [ -f /opt/bin/shutdown ]
then
	echo -e "/opt/bin/shutdown already exists.\n";
else
  set -x
  sudo sh -c 'echo "#!/bin/sh
  sudo /usr/bin/filetool.sh -b
  sudo /opt/shutdown.sh
  sudo /usr/bin/exitcheck.sh shutdown" > /opt/bin/shutdown' || err
  { set +x; } 2>/dev/null
  ok
fi

#------------------------------------------------------------------------------
step "Create script: /opt/bin/reboot (with persistence support)\\n"
if [ -f /opt/bin/reboot ]
then
	echo -e "/opt/bin/reboot already exists.\n";
else
  set -x
  sudo sh -c 'echo "#!/bin/sh
  sudo /usr/bin/filetool.sh -b
  sudo /opt/shutdown.sh
  sudo /usr/bin/exitcheck.sh reboot" > /opt/bin/reboot' || err
  { set +x; } 2>/dev/null
  ok
fi

#------------------------------------------------------------------------------
step "Backup changes\\n"
set -x
filetool.sh -b
{ set +x; } 2>/dev/null
ok

echo
echo
